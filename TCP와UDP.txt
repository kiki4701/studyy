TCP 와 UDP

TCP와 UDP는 TCP/IP의 전송계층에서 사용되는 프로토콜이다. 전송계층은 IP에 의해 전달되는 패킷의 오류를 검사하고 재전송 요구 등의 제어를 담당하는 계층이다. 두 프로토콜은 모두 패킷을 한 컴퓨터에서 다른 컴퓨터로 전달해주는 IP프로토콜을 기반으로 구현되어 있지만, 서로 다른 특징을 가지고 있다.

프로토콜은?
컴퓨터, IP폰 등 한 클라이언트에서 발생한 데이터가 상대방 컴퓨터 혹은 서버로 전달되기 위해서는 표준화 된 어떠한 약속 혹은 절차를 따라야한다. 전기 신호가 그냥 케이블을 타고 상대방에게 전달되는 것이 아니다. 
보내는 쪽에서는 데이터를 안전하고 정확하고, 신속하게 '규격화' 즉 포장하는 방법이 필요하고, 받는 쪽에서는 그 데이터를 안전하고 정확하고 신속하게 '해석' 하는 방법이 필요하다. 그런 기술적 약속을 '프로토콜' 이라고 한다. 네트워크를 공부한다는 것은 프로토콜을 학습하는것과 마찬가지이다.

패킷은?
인터넷 내에서 데이터를 보내기 위한 경로배정(라우팅)을 효율적으로 하기 위해서 데이터를 여러 개의 조각들로 나누어 전송을 하는데 이때, 이 조각을 패킷이라고 한다.

TCP(Transmission Control Protocol)
전송을 제어하는 규약이라는 뜻이다. Internet상에서 데이터를 메세지 형태로 보내기 위해 IP와 함꼐 사용하는 규약이다. TCP 는 패킷을 추적 및 관리하고 IP는 데이터의 배달을 처리한다. TCP는 네트워크에 연결된 컴퓨터에서 실행되는 프로그램 간에 일련의 옥텟(데이터, 메시지, 세그먼트라는 블록단위)을 안정적으로, 순서대로, 에러 없이 교환할 수 있게 한다

TCP 특징
** 연결형 서비스로 연결이 성공해야 통신이 가능하다
연결을 설정 할 때는 3-way handshaking
(SYN -> ACK+SYN -> ACK)
연결을 해제 할 때는 4-way handshaking 
(FIN -> ACK -> FIN -> ACK)
을 통해 동작한다

SYN : 연결 설정 요구. 동기화 시퀀스 번호. 양쪽이 보낸 최초의 패킷에만 이 플래그가 설정되어 있어야 한다
ACK : 송신측에 대하여 수신측에서 긍정 응답으로 보내지는 전송 제어용 캐릭터
(응답 번호 필드가 유요한지 설정. 클라이언트가 보낸 최초의 SYN 패킷 이후에 전송되는 모든 패킷은 이 플래그가 설정되어야 한다)

** 흐름제어(Flow control)
데이터 처리 속도를 조절하여 수신자의 버퍼 오버플로우를 방지한다
- 송신하는 곳에서 감당이 안되게 많은 데이터를 빠르게 보내 수신하는 곳에서 문제가 일어나는 것을 막는다
- 수신자가 윈도우크기(Window Size) 값을 통해 수신량을 정할 수 있다

** 혼잡제어(Congestion Control)
네트워크 내의 패킷 수가 넘치게 증가하지 않도록 방지한다
소통량이 과다하면 패킷을 조금만 전송하여 혼잡 붕괴 현상이 일어나는 것을 막는다

**신뢰성이 높은 전송
Dupack-based retransmission
정상적인 상황에서는 ACK값이 연속적으로 전송되어야 한다. 그러나 ACK값이 중복으로 올 경우 패킷 이상을 감지하고 재전송을 요청한다

TImeout-based retransmission
일정시간동안 ACK값이 수신을 못할 경우 재전송을 요청한다

** 전이중, 점대점 방식
전이중 : 전송이 양방향으로 동시에 일어날 수 있다
점대점 : 각 연결이 정확히 2개의 종단점을 가지고 있다

TCP 단점
데이터로 보내기 전에 반드시 연결이 되어야 한다
1:1 통신만 가능하다
상대적으로 UDP보다 데이터 전송속도가 느리다


UDP(User Datagram Protocol)
전송계층의 비연결 지향적 프로토콜이다. 데이터를 주고받을 때 연결 절차를 거치지 않고 발신자가 일방적으로 데이터를 발신하는 방식을 의미한다. 연결과정이 없기 떄문에 TCP보다 빠르지만 데이터가 유실될 수 있고, 데이터 패킷을 순차적으로 보내더라도 먼저 보낸 패킷이 느린 선로를 통해 전송될 경우 나중에 보낸 패킷보다 늦게 수신될 수 있다

UDP 특징
- 비연결형 서비스로 연결 없이 통신이 가능하며 데이터그램 방식을 제공한다. (데이터의 전송 순서가 바뀔 수 있다)
데이터그램 방식이란 데이터 전송 전에 송/수신자 사이에 가상 회선이라 불리는 논리적 경로를 설정하지 않고, 패킷들이 각기 독립적으로 전송되는 방식이다.

- 정보를 주고 받을 때 정보를 보내거나 받는다는 신호절차를 거치지 않는다
- 신뢰성이 낮다
- 패킷 관리가 필요하다
- 패킷 오버헤드가 적어 네트워크 부하가 감소되는 장점이 있다
- UDP헤더의 CheckSum 필드를 통해 최소한의 오류만 검출한다
- 상대적으로 TCP 보다 전송속도가 빠르다


UDP 서버의 특징
- UDP 에는 연결 자체가 없어서(connet 함수 불필요) 서버 소켓과 클라이언트 소켓의 구분이 없다
- 소켓을 활용해 IP와 PORT를 기반으로 데이터를 전송한다
- 서버와 클라이언트는 1대1, 1대N, N대M 등으로 연결될 수 있다
- 데이터그램(메세지) 단위로 전송되며 그 크기는 65535바이트로, 크기가 초과하면 잘라서 보낸다
- 흐름제어가 없어서 패킷이 제대로 전송되었는지, 오류가 없는지 확인할 수 없다
- 파일 전송과 같은 신뢰성이 필요한 서비스보다 성능이 중요시 되는 경우에 사용된다(streaming)





 
