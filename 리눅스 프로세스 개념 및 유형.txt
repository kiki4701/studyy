리눅스 프로세스 개념 및 유형

프로세스의 개념
 1. 프로세스는 CPU와 메모리를 할당받아 실행시키는 프로그램이다.
 2. 프로세스들마다 고유의 프로세스ID(PID)를 할당받는다.
  - 가장 먼저 실행되는 프로세스는 init이다. init의 PID는 1이다.
  - 프로세스 init에 의해 다른 모든 프로세스들이 시작된다.

프로세스의 유형
 ** 포어그라운드 프로세스와 백그라운드 프로세스
  1. 프로세스는 실행 형태에 따라 포어그라운드(foreground)프로세스와 백그라운드(back-ground)프로세스로 나뉜다. 
포어그라운드 프로세스 (Foreground)
 - 사용자와 상호작용하는 프로세스
 - 터미널에 직접 연결되어 입출력을 주고받는 프로세스
 - 명령 입력 후 수행 종료까지 기다려야 하는 프로세스
 - 화면에서 실행되는 것이 보이는 프로세스
 ex) 응용 프로그램, 명령어 등
백그라운드 프로세스 (Background)
 - 사용자와 직접적인 대화를 하지 않고 뒤에서 실행되는 프로세스
 - 사용자의 입력에 관계없이 실행되는 프로세스
 - 실행은 되지만 화면에 나타나지 않고 실행되는 프로세스
 ex) 시스템 프로그램, 데몬 등

** fork()와 exec()
사용자가 새로운 프로세스를 생성하기 위해 사용하는 시스템 호출 함수로는 fork()와 exec()가 있다.
 1. fork() 함수
  - 새로운 프로세스를 만들 때 기존 프로세스를 복제하는 방식을 사용한다.
  - 새로운 프로세스를 위한 메모리를 할당한다.
  - 새로 생성된 프로세스는 원래의 프로세스와 똑같은 코드를 가지고 있다.
  - 원본 프로세스를 부모 프로세스(parent process)라고 부르고, 새로 복제된 프로세스를 자식 프로세스(child process)라고 부른다.
 2. exec() 함수
  - 호출하는 프로세스가 새로운 프로세스로 변경되는 방식이다.
  - 새로운 프로세스를 위한 메모리를 할당하지 않는다.
  - 호출한 프로세스의 메모리에 새로운 프로세스의 코드를 덮어씌워 버린다.
  - exec()를 호출한 프로세스가 아닌 exec()에 의해 호출된 프로세스만 메모리에 남게 된다.

** 데몬(Daemon)
 1. 리눅스 시스템이 부팅 시 자동으로 실행되는 백그라운드 프로세스이다.
 2. 메모리에 상주하면서 사용자의 특정 요청이 오면 즉시 실행되는 대기 중인 서버 프로세스이다.
 3. 주기적이고 지속적인 서비스 요청을 처리하기 위해 실행된다.
 4. 사용자들은 이 프로세스들을 볼 수 있는 권한이 없다.
 5. 리눅스에서 데몬을 실행하는 방법에는 세 가지가 있다.
  (standalone 데몬, inetd 데몬(슈퍼데몬), inetd 타입 데몬)

** 시그널(Signal)
 1. 시그널은 프로세스에게 이벤트 발생을 전달해주는 소프트웨어 인터럽트이다.
 2. 시그널이 프로세스에게 전달될 때 4가지 상황(무시, 강제종료, 지정된 루틴 실행, 블로킹)이 발생한다.
 3. 명령어 kill -l 로 시그널 리스트를 확인할 수 있다.
