셸 (Shell)

개념
1. 명령어 해석기(command interpreter)이다.
 - 사용자가 입력한 명령어를 해석하여 커널에 전달한다.
 - DOS의 Command.com과 동일한 기능을 수행한다.
 - 커널과 사용자 간의 대화식 인터페이스를 제공한다.
2. 로그인할 때 실행되어 사용자별로 사용 환경 설정을 가능하게 한다.
3. 강력한 스크립트 언어이다.
 - 셸 자체가 프로그래밍 기능을 갖고 있다.
4. 입출력 방향 재지정(redirection)과 파이프(pipe) 기능을 제공한다.
5. 포어그라운드/백그라운드 프로세스를 실행한다.

종류
1. 본셸(Bourne shell) 계열과 C셸 계열로 나뉜다.
2. 사용자 프롬프트가 '$'이면 본셸 계열, '%'이면 C셸 계열을 사용하고 있다는 것이다.
3. 대부분의 셸은 본셸 계열의 기능을 포함하여 확대 발전한 형태이다.
4. C셸은 본셸의 모든 기능과 명령어 히스토리(history), 별명(alias), 작업 제어 기능을 추가로 가지고 있다.
본셸 계열		본셸	/bin/sh
		콘셸	/bin/ksh
		배쉬셸	/bin/bash
		지셸	/bin/zsh
C셸 계열		C셸	/bin/csh
		tc셸	/bin/tcsh

셸 확인 및 변경
** 로그인 셸 확인
 1. 파일 /etc/shells에서 사용할 수 있는 셸들을 확인할 수 있다.
 2. 파일 /etc/passwd 파일에서 계정마다 할당된 셸을 확인할 수 있다.
 3. 명령어 'echo $SHELL'은 현재 로그인한 사용자가 사용하고 있는 셸을 확인할 수 있다.

** 셸 변경
 1. 로그인 셸 변경은 반영구적인 셸 변경 방법으로 관리자가 셸 변경 후 다음 변경을 하기 전까지 지정된 셸을 사용한다.
 2. chsh : 일반 사용자 환경에서 셸 변경 시 사용한다.
 chsh [옵션] 계정명 셸
 -s	지정하는 셸을 앞으로 사용할 로그인 셸로 변경
 -l	/etc/shells 파일 안에 지정된 셸을 나열
 3. usermod : 관리자 환경에서 지정된 계정의 정보를 변경할 때 사용하는 명령어이다.
 usermod [옵션] 계정명
 -s 변경 셸 	기존의 셸에서 새로운 셸로 변경 시 사용된다.
  
	