Spring JDBC 템플릿은 Mybatis와 비슷한 라이브러리이다

jdbc api 에서의 어떤 반복적인 코드를 제거해준다(result set, connection 같은것)

jdbc템플릿을 사용할 때에는

private final JdbcTemplate jdbcTempalte 사용한다(JdbcTempalte 라는 자료형을 사용한다) 이 자료형은 인젝션을 따로 받을 수는 없어서 생성자에서 DataSource를 자동인젝션해서 받아야 한다

생성자가 1개일 경우에는 @Autowired 어노테이션을 생략가능하다

withTableName 에 테이블 명 넣고 usingGeneratedKeyColumns에 pk를 넣은 뒤 나머지 파라미터를 parameters.put("",값)으로 넣어주면 자동으로 쿼리문을 생성한다

그 후 executeAndReturnKey 이용해서 키 값을 받고 그 키 값을 member.setId(key.longValue()); 를 통해서 넣어주면 자동으로 인서트문을 완성해준다

document 보고 어떻게 쓰는지 알아볼 수 있다 이런게 있다 알아보자

jdbcTemplate 에 대해서도 설명하면 엄청 방대하지만 이 강의에서는 이런느낌이구나 하고 감을 잡는 느낌이기 떄문에 이런 것이 있다는 것 정도만 알고 다음강의에서 자세히 알려주심

jdbcTemplate.query 를 통해서 memberRowMapper를 매핑 해놓으면 객체 생성에 대한 것은 memberRowMapper() 에서 callback 으로 정리가 된다

Repository 를 다 작성 해줬으면 SpringConfig 로 가서 조립을 해준다

return new JdbcTemplateMemberRepository(dataSource); 해주면 됨

테스트코드 잘 짜는건 정말 중요하다!!!!!!!!!!!!

프로덕션이 커지면 테스트코드가 너무 중요하다 작은 실수 하나가 큰금액의 피해로 돌아올 수 있기 때문에